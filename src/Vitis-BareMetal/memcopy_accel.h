#ifndef MEMCOPY_ACCEL_H_
#define MEMCOPY_ACCEL_H_

#include <stdint.h>
#include <stdbool.h>



/* Default base address: CHANGE THIS to your HLS/PL base address from Vivado */
#ifndef MEMCOPY_ACCEL_BASEADDR
#define MEMCOPY_ACCEL_BASEADDR 0x40000000u
#endif

/* Register offsets generated by Vivado HLS (typical layout) */
#define MEMCOPY_ACCEL_CTRL_OFFSET   0x00u   /* Control (ap_start, ap_done, etc.) */
#define MEMCOPY_ACCEL_GIE_OFFSET    0x04u   /* Global Interrupt Enable (if created) */
#define MEMCOPY_ACCEL_IER_OFFSET    0x08u   /* IP Interrupt Enable */
#define MEMCOPY_ACCEL_ISR_OFFSET    0x0Cu   /* IP Interrupt Status */
#define MEMCOPY_ACCEL_SRC_OFFSET    0x10u   /* src (lower 32 bits) */
#define MEMCOPY_ACCEL_DST_OFFSET    0x1cu   /* dst (lower 32 bits) */
#define MEMCOPY_ACCEL_LEN_OFFSET    0x28u   /* len (bytes) */

/* Control bits */
#define MEMCOPY_AP_START_MASK       0x01u
#define MEMCOPY_AP_DONE_MASK        0x02u
#define MEMCOPY_AP_IDLE_MASK        0x04u
#define MEMCOPY_AP_READY_MASK       0x08u

#define MEMCOPY_AUTO_RESTART_MASK   0x80u

/*How to Use Interrupts Registers
1. Enable global interrupts by writing 1 to GIER.
2. Enable channel-specific interrupts by setting bits in IP_IER.
3. Monitor interrupt status using IP_ISR.
4. Clear interrupt status (if supported) by writing 1 to the corresponding bit in IP_ISR.
 */

/* Global Interrupt Enable bit mask */
#define MEMCOPY_GIE_ENABLE_MASK		0x01u

/* IP Interrupt Enable bit mask*/
#define MEMCOPY_IER_CHAN0_INT_EN_MASK               0x01u
#define MEMCOPY_IER_CHAN1_INT_EN_MASK               0x02u

/* IP Interrupt Status bit mask*/
#define MEMCOPY_ISR_CHAN0_INT_CLEAR_MASK            0x01u


/* Prototypes */
void memcopy_accel_init(uint32_t baseaddr);
void memcopy_accel_start(uint32_t src_addr, uint32_t dst_addr, uint32_t len);
bool memcopy_accel_is_done(void);
void memcopy_accel_wait_done(void);

/* High-level convenience function (blocking) */
int memcopy_accel_copy_polling(uint32_t src_addr, uint32_t dst_addr, uint32_t len);

/* New: interrupt helpers */
void memcopy_accel_interrupt_enable(void);
void memcopy_accel_interrupt_clear(void);




#endif /* MEMCOPY_ACCEL_H_ */
